{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_Services/members.service.ts","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_Services/message.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_Services/account.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_Services/paginationhelper.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detail.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/_Services/presence.service.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { error } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl=environment.apiUrl;\n  validationErrors: string[]=[];\n\n  constructor(private http:HttpClient) { }\n\n  ngOnInit(): void {\n  }\n  get404error(){\n    this.http.get(this.baseUrl  +'buggy/not-found').subscribe(response =>{\n      console.log(response);\n\n    },error =>{\n      console.log(error);\n    })\n  }\n    get400error(){\n      this.http.get(this.baseUrl  +'buggy/bad-request').subscribe(response =>{\n        console.log(response);\n  \n      },error =>{\n        console.log(error);\n      })\n    }\n      get500error(){\n        this.http.get(this.baseUrl  +'buggy/server-error').subscribe(response =>{\n          console.log(response);\n    \n        },error =>{\n          console.log(error);\n        })\n      }\n        get401error(){\n          this.http.get(this.baseUrl  +'buggy/auth').subscribe(response =>{\n            console.log(response);\n      \n          },error =>{\n            console.log(error);\n          })\n  }\n  get400Validationerror(){\n    this.http.post(this.baseUrl  +'account/register',{}).subscribe(response =>{\n      console.log(response);\n\n    },error =>{\n      console.log(error);\n      this.validationErrors = error;\n    })\n\n}\n}\n","<ng-container>\n    <button (click)=\"get500error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400error()\"class=\"btn btn-outline-primary mr-3\">Test 400 error</button>\n    <button (click)=\"get401error()\"class=\"btn btn-outline-primary mr-3\">Test 401 error</button>\n    <button (click)=\"get404error()\" class=\"btn btn-outline-primary mr-3\">Test 404 error</button>\n    <button (click)=\"get400Validationerror()\"class=\"btn btn-outline-primary mr-3\">test for validation 400 error</button>\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length>0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","import { error } from '@angular/compiler/src/util';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_Services/account.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() cancelRegister=new EventEmitter(); \n\n   registerForm: FormGroup;\n   ValidationErrors: string[] = [];\n\n  constructor(private accountService: AccountService,private toastr:ToastrService,private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    \n   this.intializeForm();\n    \n  }\n  intializeForm(){\n    this.registerForm = this.fb.group({\n      gender:['male'],  \n      username:['',Validators.required],\n      knownas:['',Validators.required],\n      dateOfBirth:['',Validators.required],\n      city:['',Validators.required],\n      country:['',Validators.required],\n      password:['',[Validators.required,Validators.minLength(4),Validators.maxLength(9)]],\n      confirmPassword: [ '',[Validators.required,this.matchValues('password')]  ]\n \n    })\n  }\n  matchValues(matchto: string) :ValidatorFn {\n    return(control:AbstractControl ) =>{\n      return control?.value ===control?.parent?.controls[matchto].value ? null:{isMatching:true}\n    }\n   \n  }\n  register(){\n  \n    this.accountService.register(this.registerForm.value).subscribe(response =>{\n      \n      this.router.navigateByUrl('/members');  \n\n    } ,error =>{\n     this.ValidationErrors= error;\n     \n     \n    })\n    \n \n  }\n  cancel(){\n\n    this.cancelRegister.emit(false );\n  }\n}\n"," <form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid &&register()\"autocomplete=\"off\">\n    <h2 class=\"text-centre text-primary\">Sign up</h2>\n    <hr>\n    <div class=\"form-group\">\n        <label class=\"control-label\" style=\"margin-right:10px\">Iam A</label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n        </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"female\" formControlName=\"gender\" class=\"ml-3\">Female\n        </label>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\"\n        [class.is-invalid]='registerForm.get(\"username\").errors && registerForm.get(\"username\").touched'\n        class=\"form-control\" formControlName=\"username\" placeholder=\"Username\">\n        <div class=\"invalid-feedback\">please enter a username</div>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\"\n        [class.is-invalid]='registerForm.get(\"knownas\").errors && registerForm.get(\"knownas\").touched'\n        class=\"form-control\" formControlName=\"knownas\" placeholder=\"knownas\">\n        <div class=\"invalid-feedback\">please enter a KNOWNAS</div>\n    </div>\n   \n    <div class=\"form-group\">\n        <input type=\"text\"\n        [class.is-invalid]='registerForm.get(\"dateOfBirth\").errors && registerForm.get(\"dateOfBirth\").touched'\n        class=\"form-control\" formControlName=\"dateOfBirth\" placeholder=\"DateOfBirth\" [type]=\"'date'\">\n        <div class=\"invalid-feedback\">please enter a date of birth</div>\n    </div>\n   \n    <div class=\"form-group\">\n        <input type=\"text\"\n        [class.is-invalid]='registerForm.get(\"city\").errors && registerForm.get(\"city\").touched'\n        class=\"form-control\" formControlName=\"city\" placeholder=\"City\">\n        <div class=\"invalid-feedback\">please enter a CITY</div>\n    </div>\n   \n    <div class=\"form-group\">\n        <input type=\"text\"\n        [class.is-invalid]='registerForm.get(\"country\").errors && registerForm.get(\"country\").touched'\n        class=\"form-control\" formControlName=\"country\" placeholder=\"Country\">\n        <div class=\"invalid-feedback\">please enter a COUNTRY</div>\n    </div>\n   \n   \n    \n    <div class=\"form-group\">\n        <input type=\"password\" \n        [class.is-invalid]='registerForm.get(\"password\").errors && registerForm.get(\"password\").touched'\n        class=\"form-control\" formControlName=\"password\" placeholder=\"Password\">\n        <div  *ngIf=\"registerForm.get('password').hasError('required')\" class=\"invalid-feedback\">please enter a Password</div>\n\n        <div  *ngIf=\"registerForm.get('password').hasError('maxlength')\" class=\"invalid-feedback\">password must be atleast 8 charecters</div>\n        <div  *ngIf=\"registerForm.get('password').hasError('minlength')\" class=\"invalid-feedback\">password must be atleast 4 charecters</div> \n    </div>\n    <div class=\"form-group\">\n        <input  [class.is-invalid]='registerForm.get(\"confirmPassword\").errors && registerForm.get(\"confirmPassword\").touched' type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\n        <div  *ngIf=\"registerForm.get('confirmPassword').hasError('required')\" class=\"invalid-feedback\">please enter confirm password</div>\n        <div  *ngIf=\"registerForm.get('confirmPassword').hasError('isMatching')\" class=\"invalid-feedback\">confirm password must macth password</div> \n    </div>\n    <div class=\"row \" *ngIf=\"ValidationErrors.length>0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of ValidationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n    \n    <div class=\"form-group text-center\">\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button> \n        <button class=\"btn btn-default mr-2\"(click)=\"cancel()\" type=\"button\">Cancel</button>\n    </div>\n</form>\n ","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { of, pipe } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationhelper';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  members:Member[]=[];\n  baseUrl = environment.apiUrl;\n  memberCache =new Map();\n  user:User;\n  userParams: UserParams;\n \n\n  constructor(private http: HttpClient,private accountService: AccountService ) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>{\n      this.user= user;\n      this.userParams=new UserParams(user);\n    })\n  }\n  getUserParams(){\n    return this.userParams;\n  }\n  setUserParams(params:UserParams){\n     this.userParams= params;\n  }\n  resetUserParams(){\n    this.userParams = new UserParams(this.user); \n    return this.userParams;\n  }\n\n  getMembers(userParams:UserParams){\n  var response =  this.memberCache.get(Object.values(userParams).join('-'));\n  if(response){\n    return of(response); \n  }\n  \n    let params = getPaginationHeaders(userParams.pageNumber , userParams.pageSize);\n    params = params.append('minAge',userParams.minAge.toString());   \n    params = params.append('maxAge',userParams.maxAge.toString());   \n    params = params.append('gender',userParams.gender);   \n    params = params.append('orderBy',userParams.orderBy);  \n\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users',params,this.http)\n    .pipe(map(response=>{\n      this.memberCache.set(Object.values(userParams).join('-'),response);\n      return response;\n    }))\n  }\n  \n\n\n  getMember(username :string){\n    const member =[...this.memberCache.values()]\n    .reduce((arr,elem)=>arr.concat(elem.result),[])\n    .find((member:Member)=>member.userName ===username);\n    if(member){\n      return of(member); \n    }\n \n    \n     \n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n  updateMember(member:Member){\n\n    return this.http.put(this.baseUrl+'users',member).pipe(\n      map(()=>{\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      }))\n  }\n  setMainPhoto(photoId: number){\n    return this.http.put(this.baseUrl +'users/set-main-photo/' + photoId,{});\n  }\n  deletePhoto(photoId:number){\n    return this.http.delete(this.baseUrl +'users/delete-photo/' + photoId);\n  }\n  addLike(username:string){\n\n    return this.http.post(this.baseUrl +'likes/' + username,{})\n  }\n  getLikes(predicate:string, pageNumber,pageSize){\n    let params=getPaginationHeaders(pageNumber,pageSize);\n    params=params.append('predicate',predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl+'likes',params,this.http);\n  }\n} ","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MembersService } from 'src/app/_Services/members.service';\nimport { MessageService } from 'src/app/_Services/message.service';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n @ViewChild('messageForm') messageForm:NgForm;\n @Input() messages:Message[];\n @Input() username:string;\nmessageContent:string;  \n  constructor(public messageService:MessageService) { }\n\n  ngOnInit(): void {\n    \n  }\nsendMessage(){\nthis.messageService.sendMessage(this.username,this.messageContent).then(()=>{\n  \n  this.messageForm.reset();\n});\n}\n \n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n            No Messages yet.... Say hi by using messages box below.\n        </div>\n        <ul *ngIf=\"(messageService.messageThread$ | async)?.length>0\">\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-imag float-right\">\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl||'./assets/user.png'}}\" alt=\"{{message.senderUsername}}\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead && message.senderUsername!==username\">\n                                    (unread)\n                                </span>\n                                <span class=\"text-success\" *ngIf=\"message.dateRead && message.senderUsername!==username\">\n                                    (read {{message.dateRead|timeago}})\n                                </span>\n                            </small>\n                        </div>\n                        <p> {{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input  name=\"messageContent\"\n                required\n                [(ngModel)]=\"messageContent\" type=\"text\" class=\"form-control input-sm\" placeholder=\"Send a Private message\" >\n                <div class=\"input-group-append\"> \n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not Found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return Home</button>\n</div>","import { group } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { error } from 'protractor';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/Group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationhelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  hubUrl=environment.hubUrl;\n  baseUrl=environment.apiUrl;\n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$=this.messageThreadSource.asObservable();\n\n  constructor(private http:HttpClient) { \n\n  }\n  createHubConnection(user:User,otherUsername:string){\n    this.hubConnection = new HubConnectionBuilder()\n    .withUrl(this.hubUrl +'message?user=' + otherUsername,{\n      accessTokenFactory:()=>user.token\n    })\n    .withAutomaticReconnect()\n    .build()\n    this.hubConnection.start().catch(error=>console.log(error));\n    this.hubConnection.on('ReceiveMessageThread' ,messages=>{\n      this.messageThreadSource.next(messages);\n    })\n    this.hubConnection.on('NewMessage', message=>{\n      this.messageThread$.pipe(take(1)).subscribe(messages=>{\n        this.messageThreadSource.next([...messages,message])\n      })\n    })\n    this.hubConnection.on('UpdatedGroup',(group: Group)=>{\nif(group.connections.some(x=>x.username ==otherUsername)){\n  this.messageThread$.pipe(take(1)).subscribe(messages=>{\n    messages.forEach(message=>{\n      if(!message.dateRead){\n        message.dateRead=new Date(Date.now())\n      }\n    }) \n    this.messageThreadSource.next([...messages]);\n  })\n}\n    })\n  }\n  stopHubConnection()\n  {\n    if(this.hubConnection){\n      this.hubConnection.stop();\n    }\n    \n  }\n\n  getMessages(pageNumber,pageSize,container){\n    let params =getPaginationHeaders(pageNumber,pageSize);\n    params = params.append('Container',container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages',params,this.http);\n  }\n  getMessageThread(username:string){\n    return this.http.get<Message[]>(this.baseUrl+'messages/thread/'+username);\n  }\n   async sendMessage(username:string,content: string){\n    return this.hubConnection.invoke('SendMessage',{recipientUsername:username, content})\n    .catch(error=>console.log(error));\n  }\n  deletMessage(id:number){\n    return this.http.delete(this.baseUrl +\"messages/\"+ id); \n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\nerror: any;\n  constructor(private router:Router) { \n    const navigation= this.router.getCurrentNavigation();\n    this.error= navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Internal server error refreshing the page make the error disappear</h3>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error:{{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: if ur seeing this then angular is not to blame</p>\n    <p>what to do next?</p>\n    <ol> \n        <li>Open chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>check the failing request</li>\n        <li>Examine the URL - make sure it is correct</li>\n        <li>Reproduce the error In POSTMAN</li>\n\n\n    </ol>\n    <p>Following is the stack trace</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\nimport { ReplaySubject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl =environment.apiUrl;\n  private currentUserSource= new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient,private presence: PresenceService) {}\n    login(model: any){\n      return this.http.post(this.baseUrl + 'account/login', model).pipe(\n        map((response : User) => {\n          const user = response;\n          if (user) {\n           this.setCurrentUser(user);\n           this.presence.createHubConnection(user);\n          } \n        })\n      )\n    }\n    register(model:any){\n      return this.http.post(this.baseUrl + 'account/register',model).pipe(\n        map((user: User) =>{\n          if(user){\n            this.setCurrentUser(user);\n            this.presence.createHubConnection(user);\n                    }\n                    \n                    \n        })\n      )\n    }\n    setCurrentUser (user : User){\n      user.roles=[];\n      const roles= this.getDecodedToken(user.token).role;\n      Array.isArray(roles) ? user.roles=roles:user.roles.push(roles);  \n      localStorage.setItem('user',JSON.stringify(user));\n      this.currentUserSource.next(user);\n    }\n    logout(){ \n      localStorage.removeItem('user');\n      this.currentUserSource.next(null);\n      this.presence.stopHubConnection();\n\n    }\n    getDecodedToken(token){\n      return JSON.parse(atob(token.split('.')[1]));\n    }\n   \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode =false;\n  \n\n  constructor( ) { }\n\n  ngOnInit(): void {\n \n  }\n  registerToggle(){\n    this.registerMode=!this.registerMode;\n  }\n\n  cancelRegisterMode(event:boolean){\n   this.registerMode= event;\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style = 'text-align: center;'>\n    <h1>Find Your Match</h1>\n    <p class=\"lead\">come to view your matches.. Signup first!</p>\n    <div class=\"text-centre\">\n        <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n        <button class=\"btn btn-info btn-lg \">Learn more</button>\n    </div>\n    </div>\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-centre\">\n            <div class=\"col-4\">\n                <app-register  (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div> ","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\nexport class  PaginatedResult<T>{\r\n    result : T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'https://localhost:5001/api/',\n  hubUrl:'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n"," import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_Services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService:AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>currentUser =user);\n    if(currentUser){\n      request = request.clone({\n        setHeaders:{\n          Authorization:` Bearer ${currentUser.token}`\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { MessageService } from '../_Services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages:Message[] =[];\n  pagination:Pagination;\n  container='Unread';\n  pageNumber=1;\n  pageSize=5;\nloading=false;\n  constructor(private messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n  loadMessages(){\n    this.loading=true;\n    this.messageService.getMessages(this.pageNumber,this.pageSize,this.container).subscribe(response =>{\n      this.messages=response.result;\n      this.pagination=response.pagination;\n      this.loading=false;\n    })\n  \n  }\n  deleteMessage(id:number){\n    this.messageService.deletMessage(id).subscribe(()=>{\n      this.messages.splice(this.messages.findIndex(m=>m.id=== id),1); \n    })\n  }\n  pageChanged(event: any){\n    this.pageNumber=event.page;\n    this.loadMessages();\n  }\n}\n","<div class=\"row mb-4\">\n<div class=\"btn-group\" name='container'>\n<button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">✉ Unread </button>\n<button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">📥 Inbox </button>\n<button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">📤  Outbox </button>\n</div>\n\n</div>\n<div class=\"row\" *ngIf=\"messages?.length ===0 \">\n    <h3>No Messages Found</h3>\n</div>\n<div class=\"row\"*ngIf=\"messages?.length>0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n    <tr>\n        <th style=\"width:20%\">Messages</th>\n        <th style=\"width:20%\">From / To</th>\n        <th style=\"width:20%\">Sent / Received</th>\n        <th style=\"width:20%\">Messages</th>\n        \n    </tr>\n    <tr [hidden]='loading' *ngFor=\"let message of messages\" routerLink='{{container === \"Outbox\" ?\"/members/\" +message.recipientUsername : \"/members/\" + message.senderUsername }}' [queryParams]='{tab:3}' >\n    <td>{{message.content}}</td>\n    <td>\n        <div *ngIf=\"container === 'Outbox'\">\n            <img  class=\"img-circle rounded-circle mr-2\" src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" alt=\"{{message.recipientUsername}}\">\n            <strong>{{message.recipientUsername |titlecase}}</strong>\n        </div>\n        <div *ngIf=\"container !== 'Outbox'\">\n            <img  class=\"img-circle rounded-circle mr-2\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" alt=\"{{message.senderUsername}}\">\n            <strong>{{message.senderUsername |titlecase}}</strong>\n        </div>\n    </td>\n    <td>{{message.messageSent |timeago}}</td>\n    <td>\n        <button (click)=\"$event.stopPropagation()\"  (click)=\"deleteMessage(message.id)\"class='btn.btn-danger'> Delete</button>\n    </td>\n    </tr>\n    </table>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n   \n  </pagination>\n  </div>"," import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass:'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot()\n  ],\n  exports:[\n    BsDropdownModule,\n  ToastrModule ,\n  TabsModule,\n  NgxGalleryModule,\n  FileUploadModule,\n  PaginationModule,\n  ButtonsModule,\n  TimeagoModule \n  ]\n})\nexport class SharedModule { }\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\n  export  function getPaginatedResult<T>(url ,params,http:HttpClient) {\r\n    const  paginatedResult: PaginatedResult<T> =new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export function   getPaginationHeaders(pageNumber:number, pageSize: number){\r\n    let params = new HttpParams();\r\n  \r\n    params = params.append('pageNumber',pageNumber.toString());\r\n    params = params.append('pageSize',pageSize.toString());\r\n return params;\r\n\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr:ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error=>{\n        if (error){\n          switch(error.status){\n            case 400:\n              if(error.error.errors){\n                const modalStateErrors =[];\n                for(const key in error.error.errors){\n                  if(error.error.errors[key]){\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              }else if(typeof(error.error)==='object'){\n                this.toastr.error(error.statusText,error.status);\n              }else{\n                this.toastr.error( error.error,error.status);\n              }\n              break;\n              case 401:\n                this.toastr.error(error.statusText,error.status );\n                break;\n                case 404:\n                  this.router.navigateByUrl('/not-found');\n                  break;\n                case 500:\n                  const navigationExtras: NavigationExtras = {state:{error: error.error}};\n                  this.router.navigateByUrl('/server-error',navigationExtras);\n                  break;\n\n              default:\n                this.toastr.error('something went wrong');\n                console.log(error);\n                break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_Services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService:AccountService,private toastr:ToastrService)\n{\n\n} \n canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user.roles.includes('Admin')|| user.roles.includes('Moderator')){\n          return true;\n        }\n       \n        this.toastr.error(\"you cannot enter the area\"); \n        return false;\n      })\n    );\n  }\n  \n}\n","import { OnDestroy } from '@angular/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_Services/account.service';\nimport { MembersService } from 'src/app/_Services/members.service';\nimport { MessageService } from 'src/app/_Services/message.service';\nimport { PresenceService } from 'src/app/_Services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit,OnDestroy {\n  @ViewChild('memberTabs',{static:true}) memberTabs:TabsetComponent;\n  member :Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab:TabDirective;\nmessages:Message[]=[];\nuser:User;\n  constructor(public presence:PresenceService, private route:ActivatedRoute,private messageService: MessageService,private accountServie:AccountService,private router:Router) { \n    this.accountServie.currentUser$.pipe(take(1)).subscribe(user=>this.user = user);  \n    this.router.routeReuseStrategy.shouldReuseRoute=()=>false;\n  }\n \n\n  ngOnInit(): void {\n    this.route.data.subscribe(data =>{\n      this.member=data.member;\n    })\n    this.route.queryParams.subscribe(params=>{\n      params.tab? this.selectTab(params.tab) : this.selectTab(0);\n    })\n    this.galleryOptions = [\n      {\n        width: '600px',\n        height: '400px',\n        imagePercent: 80,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview:false\n      }\n    ]\n    this.galleryImages= this.getImages();\n    \n  }\n  getImages(): NgxGalleryImage[]{\n    const imageUrls =[];\n    for(const photo of this.member.photos){\n      imageUrls.push({\n        small:photo?.url,\n        medium:photo?.url,\n        large:photo?.url\n      })\n    }\n    return imageUrls;\n  }\n \n  loadMessages(){\n    this.messageService.getMessageThread(this.member.userName).subscribe(messages =>{\n      this.messages=messages;\n    })\n  }\n  selectTab(tabId:number){\n    this.memberTabs.tabs[tabId].active=true;\n  }\nonTabActivated(data:TabDirective){\n  this.activeTab=data;\n  if(this.activeTab.heading=== 'Messages'&& this.messages.length===0){\n    this.messageService.createHubConnection(this.user,this.member.userName);\n  }else{\n    this.messageService.stopHubConnection();\n  }\n}\nngOnDestroy(): void {\n  this.messageService.stopHubConnection();\n}\n}\n","<div class=\"row\" >\n <div class=\"col-4\">\n     <div class=\"card\"> \n         <img src=\"{{member.photoUrl ||'./assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n          class=\"card-img-top img-thumbnail\">\n          <div class=\"card-body\">\n              <div class=\"mb-2\" *ngIf=\"(presence.onlineUser$ |async).includes(member.userName)\">\n                 <i class=\"fa fa-user-circle text-success\"> 👤Online Now </i>\n              </div>\n              <div>\n                  <strong>Location: </strong>\n                  <p>{{member.city}},{{member.country}}</p>\n              </div>\n              <div>\n                  <strong>LOCATION: </strong>\n                  <p>{{member.city}},{{member.country}}</p>\n              </div>\n              <div>\n                  <strong>USERS AGE: </strong>\n                  <p>{{member.age}}</p>\n              </div>\n              <div>\n                <strong>LAST ACTIVE: </strong>\n                <p>{{member.lastActive | timeago}}</p>\n            </div>\n              <div>\n                  <strong>MEMBERS SINCE: </strong>\n                  <p>{{member.created | date}}</p>\n              </div>\n         \n          </div>\n          <div class=\"card-footer\">\n              <div class=\"btn-group d-flex\">\n                  <button class=\"btn btn-primary\">LIKE</button>\n                  <button (click)=\"selectTab(3)\" class=\"btn btn-success\">MESSAGE</button>\n              </div>\n          </div>\n     </div>\n </div>\n <div class=\"col-8\">\n     <tabset class=\"member-tabset\"#memberTabs>\n          <tab heading='About{{ member.knownAs}}'(selectTab)=\"onTabActivated($event)\">\n               <h4>Description</h4>\n               <p>{{member.introduction}}</p>\n               <h4> Looking For</h4>\n               <p>{{member.lookingFor}}</p>\n        </tab>\n        <tab heading='Intrests'(selectTab)=\"onTabActivated($event)\">\n            <h4>Interests</h4>\n            <p>{{member.interests}}</p>\n          \n     </tab>\n     <tab heading='Photos'(selectTab)=\"onTabActivated($event)\">\n   <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\n</tab>\n     <tab heading='Messages'(selectTab)=\"onTabActivated($event)\">\n       <app-member-messages [username]=\"member.userName\"></app-member-messages>\n </tab>\n \n     </tabset>\n </div>\n     \n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_Services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountsService:AccountService,private toastr: ToastrService){}\n  canActivate(): Observable<boolean>  {\n    return this.accountsService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error('you shall not pass!')\n         return false;\n        \n      })\n    )\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_Services/account.service';\nimport { MembersService } from 'src/app/_Services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members: Member[];\n  pagination: Pagination;\n userParams : UserParams;\n user:User;\n genderList =[{value: 'male', display: 'Males'},{value:'female',display:'Females'}]\n\n  constructor(private memberService: MembersService ) {\n    this.userParams = this.memberService.getUserParams();\n    \n     \n   }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n loadMembers(){\n   this.memberService.setUserParams(this.userParams);\n   this.memberService.getMembers(this.userParams).subscribe(response => {\n     this.members = response.result;\n     this.pagination = response.pagination;\n   })\n }\n resetFilters(){\n     \n   this.userParams =this.memberService.resetUserParams();\n   this.loadMembers(); \n }\n pageChanged(event: any){\n   this.userParams.pageNumber = event.page;\n   this.memberService.setUserParams(this.userParams );  \n   this.loadMembers();\n }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your Matches - {{pagination?.totalItems}} found</h2>\n</div>\n<div class=\"container mt-3\">\n  <form #form=\"ngForm\" class=\"form-inline mb-3\"(ngSubmit)=\"loadMembers()\"  autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label> Age From: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width:70px;\"name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\n    </div>\n    <div class=\"form-group px-2\">\n      <label> Age To: </label>\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width:70px;\"name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\n    </div>\n    \n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>   \n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button  type=\"button\" class=\"btn btn-primary\" name=\"orderBy\"  (click)=\"loadMembers()\"btnRadio='lastActive' [(ngModel)]=\"userParams.orderBy\">\n          Last Active\n        </button>\n        <button  type=\"button\" class=\"btn btn-primary\" name=\"orderBy\"  (click)=\"loadMembers()\"btnRadio='created' [(ngModel)]=\"userParams.orderBy\">\n          Newest members\n        </button>\n      </div>\n    </div>\n   \n  </form>\n</div>\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n      <app-member-card [member] =\"member\"></app-member-card>\n    </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n  [itemsPerPage]=\"pagination.itemsPerPage\"\n  [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n \n</pagination>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_Services/account.service';\nimport { PresenceService } from './_Services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'The Dating App';\n  users: any;\n  constructor(private accountService: AccountService,private presence:PresenceService){\n\n  }\n  ngOnInit() {\n  \n  this.setCurrentUser();\n  }\n  setCurrentUser(){\n    const user :User =JSON.parse(localStorage.getItem('user'));\n    if(user){\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n    \n  }\n  \n}\n","<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top:99px\">    \r\n<router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport{FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule, \n   SharedModule,\n  \n  ],\n  providers: [\n    {\n    provide:HTTP_INTERCEPTORS,useClass:ErrorInterceptor,multi:true},\n    {\n      provide:HTTP_INTERCEPTORS,useClass:JwtInterceptor,multi:true} \n  ],\n  bootstrap: [AppComponent],\n \n})\nexport class AppModule { }\n ","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_Services/account.service';\nimport { MembersService } from 'src/app/_Services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n uploader:FileUploader;\n hasBaseDropZoneOver = false;\n baseUrl = environment.apiUrl;\n user:User;\n\n  constructor( private accountService: AccountService,private memberService:MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n  fileOverBase(e :any){\n     this.hasBaseDropZoneOver = e;\n  }\n  setMainPhoto(photo: Photo){\n   this.memberService.setMainPhoto(photo.id).subscribe(()=>{\n     this.user.photoUrl = photo.url;\n     this.accountService.setCurrentUser(this.user);\n     this.member.photoUrl = photo.url;\n     this.member.photos.forEach(p =>{\n       if(p.isMain) p.isMain =  false;\n       if(p.id == photo.id) p.isMain = true; \n     })\n   })\n  }\n  deletePhoto(photoId: number){\n    this.memberService.deletePhoto(photoId).subscribe(()=>{\n      this.member.photos = this.member.photos.filter(x =>x.id != photoId);\n    })\n  }\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer '+ this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload:true,\n      autoUpload: false,\n      maxFileSize:10*1024*1024\n    });\n    this.uploader.onAfterAddingFile = (file) =>{\n      file.withCredentials= false;\n    }\n    this.uploader.onSuccessItem = (item, response, status, headers)=>{\n      if(response){\n        const photo: Photo =   JSON.parse(response); \n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1 \">\n        <div class=\"text-center\">\n            <button  \n            [disabled]=\"photo.isMain\"\n            (click)=\"setMainPhoto(photo)\"\n            [ngClass]='photo.isMain ? \"btn-success active \":\"btn-outline-success\"'\n            class=\"btn btn-sm\">\n            Main\n        </button>\n            <button [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\" class=\"btn btn-sm btn-danger\">Delete</button>  \n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>ADD Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           Drop Photos Here  \n        </div>\n\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n                \n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n               \n               \n           \n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" >\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"glyphicon glyphicon-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"glyphicon glyphicon-ban-circle\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"glyphicon glyphicon-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_Services/members.service\";\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class MemberDetailResolver implements Resolve<Member>{\r\n\r\n    constructor(private memberService: MembersService){}\r\n    resolve(route: ActivatedRouteSnapshot): Member | Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor  {\n  @Input() label: string;\n  @Input() type:'text';\n\n  constructor(@Self() public ngControl:NgControl ) {\n    this.ngControl.valueAccessor = this;\n   }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n   \n  }\n \n\n\n}\n","\n<div class=\"form-group\">\n    <input  [class.is-invalid]=\"ngControl.touched && ngControl.invalid\" type={{type}} class=\"form-control\" [formControl]=\"ngControl\" placeholder={{label}}>\n    <div  *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">please enter a {{label}}</div>\n    <div  *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">{{label}} must be atleast {{ngControl.control.errors.minlength['requiredLength']}}</div>\n    <div  *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">{{label}} must be atmost {{ngControl.control.errors.maxlength['requiredLength']}}</div>\n    <div  *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">passwords donot match</div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_Services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\nmembers: Partial<Member[]>;\npredicate = 'liked';\npageNumber=1;\npageSize=5;\npagination:Pagination\n  constructor(private memberService:MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\nloadLikes(){\n  this.memberService.getLikes(this.predicate,this.pageNumber,this.pageSize).subscribe(response =>{\n    this.members = response.result;\n    this.pagination = response.pagination;\n  })\n  \n\n}\npageChanged(event:any){\n  this.pageNumber=event.page;\n  this.loadLikes();\n}\n}\n","<div class=\"text-center mt-3\">\n<h2>{{predicate ==='liked' ? 'Members i Liked' :'Members who liked Me'}}</h2>\n\n</div>\n<div class=\"container mt-5\">\n     <div class=\"row\">\n         <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\"> Members I Liked</button>\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\"> Members Who Likes Me</button>\n         </div>\n     </div>\n     <div class=\"row mt-5\">\n         <div class=\"col-2\" *ngFor=\"let member of members\">\n            <div class=\"card mb-4\">\n                <div class=\"card-img-wrapper\">\n                    <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n                    <ul class=\"list-inline member-icons animate text-center\">\n                    <li class=\"list-inline-item\"><button routerLink='/members/{{member.userName}}' class=\"btn btn-primary\">\n                        <i class=\"fa fa-user\"></i>👤</button></li>     \n                    <li class=\"list-inline-item\"><button  (click)=\"loadLikes(member)\"\n                        class=\"btn btn-primary\">\n                        <i class=\"fas fa-heart\"></i>♥</button></li>   \n                    <li class=\"list-inline-item\"><button class=\"btn btn-primary\">\n                        <i class=\"fa fa-envelope\"></i>💬</button></li>   \n                    </ul>\n                </div> \n                <div class=\"card-body p-1\">\n                    <h5 class=\"card-title text-center mb-1\"><i class=\"fa fa-user mr-2\"></i>\n                    {{member.knownAs}},{{member.age }}\n                    </h5>\n                    <p class=\"card-text text-muted text-center \" >{{member.city}}</p>\n                   \n                </div>\n            </div>\n             \n         </div>\n       \n     </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n              previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n   \n  </pagination>\n  </div>","import { error } from '@angular/compiler/src/util';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\nhubUrl=environment.hubUrl;\nprivate hubConnection:HubConnection;\nprivate onlineUserSource=new BehaviorSubject<string[]>([]);\nonlineUser$= this.onlineUserSource.asObservable();\n\n\n  constructor(private toastr: ToastrService,private router:Router) { }\n  createHubConnection(user: User){\n    this.hubConnection=new HubConnectionBuilder()\n    .withUrl(this.hubUrl + 'presence',{\n      accessTokenFactory:()=>user.token\n    })\n    .withAutomaticReconnect()\n    .build()\n    this.hubConnection \n    .start()\n    .catch(error=>console.log(error));\n\n    this.hubConnection.on('UserIsOnline',username=>{\n     this.onlineUser$.pipe(take(1)).subscribe(usernames=>{\n       this.onlineUserSource.next([...usernames,username])\n     })\n    })\n     this.hubConnection.on('UserIsOffline',username=>{\n       this.onlineUser$.pipe(take(1)).subscribe(usernames=>{\n         this.onlineUserSource.next([...usernames.filter(x=>x!==username)])\n       })\n     })\n     this.hubConnection.on('GetOnlineUsers',(usernames: string[])=>{\n       this.onlineUserSource.next(usernames);\n     })\n     this.hubConnection.on('NewMessageReceived',({username,knownAs})=>{\n       this.toastr.info(knownAs +'has send u a new message!')\n       .onTap\n       .pipe(take(1))\n       .subscribe(()=>this.router.navigateByUrl('/members/'+username +'?tab=3'));\n     }) \n  }\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error =>console.log(error));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_Services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any ={}\n   \n\n  constructor(public accountService: AccountService, private router: Router,\n    private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n    \n  }\n  login(){\n   this.accountService.login(this.model).subscribe(response=>{\n    this.router.navigateByUrl('/members');\n     \n   })\n   }\nlogout(){\n  this.accountService.logout();\n  this.router.navigateByUrl('/'); \n  \n}\n \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary \">\n    <div class=\"container\">\n        \n            <a class=\"navbar-brand\" routerLink=\"/\">DATING APP</a>\n            \n           \n              <ul class=\"navbar-nav mr-auto \" >\n                <ng-container *ngIf=\"accountService.currentUser$ |async\">\n                  <li class=\"nav-item \">\n                    <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Matches</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/lists\"routerLinkActive=\"active\">lists</a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/messages\"routerLinkActive=\"active\">Messages</a>\n                  </li>\n                \n                 \n                </ng-container>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" routerLink=\"/errors\"routerLinkActive=\"active\">Errors</a>\n                </li>\n               \n            \n              </ul>\n              <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$  | async) as user\" dropdown>\n                <img src=\"{{user.photoUrl ||'./assets/user.png'}}\" alt=\"{{user.username}}\">\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.knownAs |titlecase}}</a>\n                <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                  <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\n                  <div class=\"dropdown-divider\"></div>\n                  <a  class=\"dropdown-item\"(click)=\"logout()\">LogOut</a>\n                </div>\n              </div>\n              <form  *ngIf=\"(accountService.currentUser$ | async)=== null\"  #loginForm=\"ngForm\" class=\"d-flex\"(ngSubmit)=\"login()\"autocomplete=\"off\">\n                <input  \n                name =\"username\"\n                [(ngModel)]=\"model.username\"\n                class=\"form-control me-2\" \n                type=\"text\" \n                placeholder=\"Username\" >\n                <input \n                name=\"password\"\n                [(ngModel)]=\"model.password\"\n                class=\"form-control me-2\" \n                type=\"password\"\n                 placeholder=\"Password\" >\n                <button class=\"btn btn-success\" type=\"submit\">LOGIN</button>\n              </form>\n            </div>\n            \n   \n    \n  </nav>","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_Services/members.service';\nimport { PresenceService } from 'src/app/_Services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n  \n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n\n  constructor(private memberService: MembersService,private toastr:ToastrService,public presence: PresenceService) { }\n\n  ngOnInit(): void {\n    \n  }\naddLike(member:Member){\n  this.memberService.addLike(member.userName).subscribe(()=>{\n    this.toastr.success('you have liked '+ member.knownAs);\n  }) \n}\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n        <li class=\"list-inline-item\"><button routerLink='/members/{{member.userName}}' class=\"btn btn-primary\">\n            <i class=\"fa fa-user\"></i>👤</button></li>     \n        <li class=\"list-inline-item\"><button  (click)=\"addLike(member)\"\n            class=\"btn btn-primary\">\n            <i class=\"fas fa-heart\"></i>♥</button></li>   \n        <li class=\"list-inline-item\"><button routerLink='/members/{{member.userName}}' [queryParams]='{tab:3}' class=\"btn btn-primary\">\n            <i class=\"fa fa-envelope\"></i>💬</button></li>   \n        </ul>\n    </div> \n    <div class=\"card-body p-1\">\n        <h5 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUser$ | async).includes(member.userName)\">\n                <li class=\"list-inline-item\"><button routerLink='/members/{{member.userName}}' class=\"btn btn-primary\">\n                    <i class=\"fa fa-user\"></i>👤</button></li>   \n            </span>\n        \n        {{member.knownAs}},{{member.age }}\n        </h5>\n        <p class=\"card-text text-muted text-center \" >{{member.city}}</p>\n       \n    </div>\n</div>\n ","import { User } from \"./user\";\r\n\r\nexport class UserParams{\r\n    gender: string;\r\n    minAge =18;\r\n    maxAge=99;\r\n    pageNumber=1;\r\n    pageSize =5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User){\r\n        this.gender = user.gender ===\"female\" ? \"male\" : \"female\";\r\n        \r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-panel works!</p>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_Services/account.service';\nimport { MembersService } from 'src/app/_Services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  member:Member;\n  user:User;\n  @HostListener('window:beforeunload',['$event']) unloadNotification($event:any)\n{\n  if(this.editForm.dirty){\n    $event.returnValue= true;\n  }\n}  \n  constructor(private accountService: AccountService, private memberService:MembersService,private toastr: ToastrService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>this.user=user);\n  }\n\n\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n  loadMember()\n  {\n    this.memberService.getMember(this.user.username).subscribe(member=>{\n      this.member = member;\n    })\n  }\n  updateMember(){\n    this.memberService.updateMember(this.member).subscribe(()=>{\n      this.toastr.success('profile updated succesfully');\n      this.editForm.reset(this.member);\n    })\n     \n   \n  }\n\n}","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h1>Your Profile</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty \">\n            <p><strong>Information: </strong>You have made any unsaved changes may lost</p>\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\"> \n            <img src=\"{{member.photoUrl ||'./assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n             class=\"card-img-top img-thumbnail\">\n             <div class=\"card-body\">\n                 <div>\n                     <strong>Location: </strong>\n                     <p>{{member.city}},{{member.country}}</p>\n                 </div>\n                 <div>\n                     <strong>LOCATION: </strong>\n                     <p>{{member.city}},{{member.country}}</p>\n                 </div>\n                 <div>\n                     <strong>USERS AGE: </strong>\n                     <p>{{member.age}}</p>\n                 </div>\n                 <div>\n                   <strong>LAST ACTIVE: </strong>\n                   <p>{{member.lastActive | timeago}}</p>\n               </div>\n                 <div>\n                     <strong>MEMBERS SINCE: </strong>\n                     <p>{{member.created | date}}</p>\n                 </div>\n            \n             </div>\n             <div class=\"card-footer\">\n             \n                    \n                     <button [disabled]=\"!editForm.dirty\"  form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-blog\">Save Changes</button>\n            \n             </div>\n        </div>\n    </div>\n    <div class=\"col-8\"> \n        <tabset class=\"member-tabset\">\n             <tab heading='About{{ member.knownAs}}'>\n                 <form #editForm =\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n               \n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\"  row=\"6\"></textarea>\n                    <h4 class=\"mt-2\"> Looking For</h4>\n                    <textarea  class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingfor\"  row=\"6\"></textarea>\n                    <h4 class=\"mt-2\"> Interests</h4>\n                    <textarea  class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\"  row=\"6\"></textarea>\n                    <h4>Location details</h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">city:</label>\n                        <input   [(ngModel)]=\"member.city\" type=\"text\"name=\"city\"class='form-control mx-2'>\n                        <label for=\"city\">Country:</label>\n                        <input   [(ngModel)]=\"member.country\"type=\"text\"name=\"Country\"class='form-control mx-2'>\n                    </div>\n                 </form>\n                  \n           </tab>\n           <tab heading='edit photos'>\n              <app-photo-editor [member]=\"member\"></app-photo-editor>\n        </tab>\n    \n    \n        </tabset>\n    </div>\n        \n   </div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  canDeactivate(\n    component: MemberEditComponent):  boolean{\n      if(component.editForm.dirty){\n        return confirm('are you sure you want to continue? any unsaved changes will be lost'); \n      }\n    return true;\n  }\n  \n}\n","  import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\n \n\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\n\nconst routes: Routes = [\n  {path :'',component:HomeComponent},\n  {\n   path:'', \n   runGuardsAndResolvers:'always',\n   canActivate:[AuthGuard], \n   children:[\n    {path :'members',component:MemberListComponent},\n  {path :'members/:username',component:MemberDetailComponent,resolve:{member:MemberDetailResolver}},\n  {path :'member/edit',component:MemberEditComponent,canDeactivate:[PreventUnsavedChangesGuard ]},\n  {path :'lists',component:ListsComponent},\n  {path :'messages',component:MessagesComponent},\n  {path:'admin',component:AdminPanelComponent,canActivate:[AdminGuard]}, \n  \n   ]\n  },\n  {path:'errors',component:TestErrorsComponent},\n  {path:'not-found',component:NotFoundComponent}, \n  {path:'server-error',component:ServerErrorComponent},\n  {path :'**',component:NotFoundComponent,pathMatch:'full'},\n\n   \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}